package ua.nure.degtuaryov.SummaryTask4.db.dao.derby;

import java.sql.Connection;
import java.sql.SQLException;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

import ua.nure.degtuaryov.SummaryTask4.db.dao.BookingDAO;
import ua.nure.degtuaryov.SummaryTask4.db.dao.ClientDAO;
import ua.nure.degtuaryov.SummaryTask4.db.dao.DAOFactory;
import ua.nure.degtuaryov.SummaryTask4.db.dao.RouteDAO;
import ua.nure.degtuaryov.SummaryTask4.db.dao.StationDAO;
import ua.nure.degtuaryov.SummaryTask4.db.dao.TrainDAO;
import ua.nure.degtuaryov.SummaryTask4.db.dao.TripDAO;
import ua.nure.degtuaryov.SummaryTask4.db.dao.VoyageDAO;

public class DerbyDAOFactory extends DAOFactory {

	@Override
	public BookingDAO getBookingDAO() {
		return new DerbyBookingDAO();
	}

	@Override
	public ClientDAO getClientDAO() {
		return new DerbyClientDAO();
	}

	@Override
	public RouteDAO getRouteDAO() {
		return new DerbyRouteDAO();
	}

	@Override
	public StationDAO getStationDAO() {
		return new DerbyStationDAO();
	}

	@Override
	public TrainDAO getTrainDAO() {
		return new DerbyTrainDAO();
	}

	@Override
	public VoyageDAO getVoyageDAO() {
		return new DerbyVoyageDAO();
	}
	
	@Override
	public TripDAO getTripDAO() {
		return new DerbyTripDAO();
	}

	public static Connection getConnection() throws SQLException {
		Connection con = null;
		try {
			Context initContext = new InitialContext();
			Context envContext = (Context) initContext.lookup("java:/comp/env");
			System.out.println("Connection~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			DataSource ds = (DataSource)envContext.lookup("jdbc/db/bookingDB");
			con = ds.getConnection();
		} catch (NamingException ex) {
			
			System.out.println("Connection error");
			ex.printStackTrace();
		}
		return con;
	}
}
